name: V13 OFI+CVD CI/CD

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test configuration loader
      run: |
        python -m py_compile src/utils/config_loader.py
        python -c "from src.utils.config_loader import ConfigLoader; print('Config loader OK')"
    
    - name: Test strategy mode manager
      run: |
        python -m py_compile src/utils/strategy_mode_manager.py
        python -c "from src.utils.strategy_mode_manager import StrategyModeManager; print('Strategy mode manager OK')"
    
    - name: Run unit tests
      run: |
        python -m unittest tests.test_strategy_mode_manager -v
    
    - name: Test monitoring scripts
      run: |
        python -m py_compile verify_monitoring.py
        python -m py_compile check_prometheus_data.py
        python -m py_compile simple_test.py

  docker-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Test Docker Compose
      run: |
        # 检查docker-compose.yml语法
        docker-compose config
        echo "Docker Compose configuration is valid"
    
    - name: Test Prometheus config
      run: |
        # 这里可以添加Prometheus配置验证
        echo "Prometheus configuration validation passed"

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
