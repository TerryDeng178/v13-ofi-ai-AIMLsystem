# V13 OFI+CVD+AI Trading System - 系统配置
# 版本: v13.0
# 创建日期: 2025-10-19
# 最后更新: 2025-10-19

# ============================================================================
# 系统元信息
# ============================================================================
system:
  name: "OFI_CVD_AI_Trading_System"
  version: "v13.0"
  # 环境: development | testing | production
  # 可通过环境变量 ENV 覆盖
  environment: "development"
  
  # 系统描述
  description: "基于订单流失衡(OFI)和累积成交量差(CVD)的AI增强交易系统"
  
  # 系统作者
  author: "V13 Team"
  
  # 创建时间
  created_at: "2025-10-19"

# ============================================================================
# 背离检测配置
# ============================================================================
divergence_detection:
  # 配置版本
  version: "v1.0"
  description: "背离检测参数配置，支持条件覆盖和热更新"
  
  # 默认参数
  default:
    swing_L: 13
    z_hi: 1.6
    z_mid: 0.6
    cooldown_secs: 30
    max_lag: 20
    cons_min: 2
    min_separation: 6
    warmup_min: 100
    weak_threshold: 35.0
  
  # 条件覆盖规则
  overrides:
    # OFI数据源在清淡时段使用更保守参数
    - when:
        source: "OFI_ONLY"
        liquidity: "quiet"
      set:
        z_hi: 1.2
        z_mid: 0.4
        cooldown_secs: 60
    
    # CVD数据源在活跃时段使用更敏感参数
    - when:
        source: "CVD_ONLY"
        liquidity: "active"
      set:
        z_hi: 1.8
        z_mid: 0.8
        cooldown_secs: 15
    
    # 融合数据源在白天时段使用长周期参数
    - when:
        source: "FUSION"
        session: "day"
      set:
        swing_L: 21
        z_hi: 1.6
        z_mid: 0.6
    
    # 夜间时段所有数据源使用保守参数
    - when:
        session: "night"
      set:
        z_hi: 1.4
        z_mid: 0.5
        cooldown_secs: 45
    
    # 高频交易对使用短周期参数
    - when:
        symbol: "BTCUSDT"
      set:
        swing_L: 8
        cooldown_secs: 10
    
    # 低频交易对使用长周期参数
    - when:
        symbol: "ETHUSDT"
      set:
        swing_L: 21
        cooldown_secs: 60
  
  # 校准配置
  calibration:
    file: "config/calibration/divergence_score_calibration.json"
    version: "v1.0"
    description: "分数到期望收益/胜率映射"
  
  # 监控配置已移到顶级monitoring部分
  
  # 热更新配置
  hot_reload:
    enabled: true
    watch_file: true
    reload_delay: 1.0  # 秒
    backup_config: true
    log_changes: true
  
  # 实验配置
  experiments:
    enabled: false
    ab_test_ratio: 0.1  # 10%流量用于A/B测试
    variants:
      - name: "baseline"
        params:
          swing_L: 13
          z_hi: 1.6
          z_mid: 0.6
      - name: "aggressive"
        params:
          swing_L: 8
          z_hi: 1.8
          z_mid: 0.8
  
  # 数据源配置
  data_sources:
    ofi:
      enabled: true
      weight: 0.4
      min_samples: 50
    
    cvd:
      enabled: true
      weight: 0.4
      min_samples: 50
    
    fusion:
      enabled: true
      weight: 0.2
      min_samples: 100

# ============================================================================
# 融合指标配置
# ============================================================================
fusion_metrics:
  # 配置版本
  version: "v1.0"
  description: "OFI+CVD融合指标配置，支持权重、阈值、去噪等参数"
  
  # 权重配置
  weights:
    w_ofi: 0.6
    w_cvd: 0.4
    # 自动归一化：确保权重和为1.0
  
  # 信号阈值
  thresholds:
    fuse_buy: 1.5
    fuse_strong_buy: 2.5
    fuse_sell: -1.5
    fuse_strong_sell: -2.5
  
  # 一致性阈值
  consistency:
    min_consistency: 0.3
    strong_min_consistency: 0.7
  
  # 数据处理
  data_processing:
    z_clip: 5.0
    max_lag: 0.300  # 最大时间差(秒)
    warmup_samples: 30  # 暖启动样本数
  
  # 去噪参数
  denoising:
    hysteresis_exit: 1.2
    cooldown_secs: 1.0
    min_duration: 2  # 最小持续次数（暂未启用）
  
  # 性能配置
  performance:
    max_events_per_second: 100
    batch_size: 10
    queue_size: 1000
  
  # 监控配置已合并到主monitoring部分
    
    alerts:
      consistency_threshold: 0.2  # 一致性告警阈值
      lag_threshold: 0.5  # 滞后告警阈值
  
  # 热更新配置
  hot_reload:
    enabled: true
    watch_file: true
    reload_delay: 1.0
    backup_config: true
    log_changes: true
  
  # 实验配置
  experiments:
    enabled: false
    ab_test_ratio: 0.1
    variants:
      - name: "conservative"
        params:
          fuse_strong_buy: 3.0
          fuse_strong_sell: -3.0
      - name: "aggressive"
        params:
          fuse_strong_buy: 2.0
          fuse_strong_sell: -2.0
  
  # 日志配置
  logging:
    level: "INFO"
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    file: "logs/divergence.log"
    max_size: "10MB"
    backup_count: 5
  
  # 调试配置
  debug:
    enabled: false
    save_events: true
    events_file: "debug/divergence_events.json"
    detailed_logs: false

# ============================================================================
# 数据源配置
# ============================================================================
data_source:
  # 数据提供商
  provider: "binance"
  
  # 默认交易对
  default_symbol: "ETHUSDT"
  
  # 支持的交易对列表
  symbols:
    - "ETHUSDT"
    - "BTCUSDT"
  
  # WebSocket配置
  websocket:
    # 币安官方推荐配置
    timeout: 30
    reconnect_interval: 5
    max_reconnect_attempts: 0
    ping_interval: 20  # 官方标准：20秒PING间隔
    
    # 详细连接配置
    connection:
      # 连接超时（秒）
      timeout: 30
      # 重连间隔（秒）
      reconnect_interval: 5
      # 最大重连次数（0表示无限重连）
      max_reconnect_attempts: 0
      # Ping间隔（秒）
      ping_interval: 20
      # 心跳超时（秒）- 币安官方要求：1分钟内回复PONG
      heartbeat_timeout: 60
      # 指数退避最大间隔（秒）
      max_backoff_interval: 30
    
    # 数据流配置
    stream:
      # 深度更新级别
      depth_levels: 5
      # 数据更新频率（毫秒）
      update_frequency: 100
      # 缓冲区大小
      buffer_size: 1000
      # 背压保护阈值
      backpressure_threshold: 0.8
    
    # 日志配置
    logging:
      # 日志级别
      level: "INFO"
      # 日志轮转间隔（秒）
      rotate_interval: 60
      # 最大日志文件大小（字节）
      max_file_size: 5000000
      # 保留的日志文件数量
      backup_count: 7
      # 是否启用NDJSON格式
      enable_ndjson: true
    
    # 性能监控配置
    monitoring:
      # 性能统计输出间隔（秒）
      stats_interval: 60
      # 是否启用性能指标
      enable_metrics: true
      # 是否输出处理时延统计
      enable_latency_stats: true
    
    # 数据存储配置
    storage:
      # 数据存储目录
      data_dir: "data/order_book"
      # 日志存储目录
      log_dir: "logs"
      # 是否启用数据压缩
      enable_compression: true
      # 压缩格式
      compression_format: "gzip"

# ============================================================================
# 组件配置
# ============================================================================
components:
  # CVD (Cumulative Volume Delta) 组件
  cvd:
    # 是否启用
    enabled: true
    
    # CVD配置文件路径（相对于config目录）
    config_file: "profiles/analysis.env"
    
    # 实时模式配置文件
    realtime_config_file: "profiles/realtime.env"
    
    # 描述
    description: "累积成交量差计算和Z-score标准化"
    
    # CVD计算参数 - Phase A1优化后参数
    z_window: 300
    ema_alpha: 0.2
    use_tick_rule: true
    warmup_min: 5
    
    # Phase A1最优参数组合 (2025-10-21)
    z_mode: "delta"                    # Delta-Z模式
    scale_mode: "hybrid"               # 混合尺度模式
    mad_multiplier: 1.8               # MAD乘数 (优化后)
    scale_fast_weight: 0.20           # 快速权重 (优化后)
    half_life_trades: 600             # 半衰期 (优化后)
    winsor_limit: 8.0                 # Winsor截断限制
    freeze_min: 50
    stale_threshold_ms: 5000
    
    # 空窗后冻结配置
    soft_freeze_ms: 4000
    hard_freeze_ms: 5000
    
    # Step 1 稳健尺度地板配置
    scale_mode: "ewma"
    ewma_fast_hl: 80
    mad_window_trades: 300
    mad_scale_factor: 1.4826
    
    # Step 1 微调配置
    scale_fast_weight: 0.30
    scale_slow_weight: 0.70
    mad_multiplier: 1.30
    post_stale_freeze: 2
  
  # OFI (Order Flow Imbalance) 组件
  ofi:
    # 是否启用
    enabled: true
    
    # OFI配置文件路径
    config_file: "binance_config.yaml"
    
    # 描述
    description: "订单流失衡计算和信号分析"
    
    # OFI计算参数
    levels: 5
    weights: [0.4, 0.25, 0.2, 0.1, 0.05]
    z_window: 300
    ema_alpha: 0.2
  
  # AI 组件
  ai:
    # 是否启用（当前阶段未启用）
    enabled: false
    
    # AI模型目录
    models_dir: "models"
    
    # 描述
    description: "机器学习模型训练和预测（Stage3）"
  
  # 交易组件
  trading:
    # 是否启用（当前阶段未启用）
    enabled: false
    
    # 交易配置文件
    config_file: "trading.yaml"
    
    # 描述
    description: "实盘交易执行和风险管理（Stage2）"

# ============================================================================
# 路径配置
# ============================================================================
paths:
  # 数据目录
  data_dir: "data"
  
  # 日志目录
  logs_dir: "logs"
  
  # 报告目录
  reports_dir: "docs/reports"
  
  # AI模型目录
  models_dir: "models"
  
  # 配置目录
  config_dir: "config"
  
  # 归档目录
  archive_dir: "../archive"
  
  # 临时文件目录
  temp_dir: "temp"

# ============================================================================
# 性能配置
# ============================================================================
performance:
  # 队列配置
  queue:
    # 最大队列大小
    max_size: 50000
    
    # 队列满时的行为: block | drop_old | drop_new
    # block: 阻塞等待（分析模式）
    # drop_old: 丢弃旧消息（实时模式）
    # drop_new: 丢弃新消息（不推荐）
    full_behavior: "block"
  
  # 批处理配置
  batch:
    # 批处理大小
    size: 1000
    
    # 批处理超时（毫秒）
    timeout_ms: 200
  
  # 刷新配置
  flush:
    # Watermark缓冲区刷新间隔（毫秒）
    watermark_interval_ms: 200
    
    # 指标刷新间隔（毫秒）
    metrics_interval_ms: 10000
    
    # 数据刷新间隔（毫秒）
    data_interval_ms: 60000
  
  # 打印/日志频率
  logging:
    # 诊断信息打印频率（每N笔交易）
    print_every_trades: 1000
    
    # 进度打印频率（秒）
    progress_interval_seconds: 60

# ============================================================================
# 日志配置
# ============================================================================
logging:
  # 日志级别: DEBUG | INFO | WARNING | ERROR | CRITICAL
  level: "INFO"
  
  # 分模式日志级别（策略模式切换时会动态调整）
  level_by_mode:
    active: "INFO"
    quiet: "INFO"
  
  # 日志格式
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
  # 日期格式
  date_format: "%Y-%m-%d %H:%M:%S"
  
  # 日志文件配置
  file:
    # 是否启用文件日志
    enabled: true
    
    # 日志文件路径（相对于logs_dir）
    filename: "system.log"
    
    # 单个日志文件最大大小（MB）
    max_size_mb: 100
    
    # 日志文件备份数量
    backup_count: 5
  
  # 控制台日志配置
  console:
    # 是否启用控制台日志
    enabled: true
    
    # 控制台日志级别（可以与文件日志级别不同）
    level: "INFO"

# ============================================================================
# 监控配置
# ============================================================================
monitoring:
  # 是否启用监控
  enabled: true
  
  # 监控指标收集间隔（秒）
  interval_seconds: 10
  
  # 指标类型
  metrics:
    # 系统指标
    system:
      - "cpu_usage"
      - "memory_usage"
      - "disk_usage"
    
    # 应用指标
    application:
      - "queue_size"
      - "processing_rate"
      - "latency"
      - "error_rate"
    
    # 业务指标
    business:
      - "trade_count"
      - "cvd_value"
      - "ofi_value"
      - "signal_count"
  
  # Prometheus配置
  prometheus:
    port: 8003
    path: "/metrics"
    scrape_interval: "5s"
  
  # 背离检测指标端口
  divergence_metrics:
    port: 8004
    path: "/metrics"
    env: "testing"
  
  # 融合指标端口
  fusion_metrics:
    port: 8005
    path: "/metrics"

# ============================================================================
# 背离检测配置
# ============================================================================
divergence_detection:
  # 是否启用背离检测
  enabled: true
  
  # 枢轴检测参数
  pivot_detection:
    swing_L: 12                # 枢轴检测窗口长度
    ema_k: 5                   # EMA平滑参数
  
  # 强度阈值
  thresholds:
    z_hi: 1.5                  # 高强度阈值
    z_mid: 0.7                 # 中等强度阈值
  
  # 去噪参数
  denoising:
    min_separation: 6          # 最小枢轴间距
    cooldown_secs: 1.0         # 冷却时间
    warmup_min: 100            # 暖启动最小样本数
    max_lag: 0.300             # 最大滞后时间
  
  # 融合参数
  fusion:
    use_fusion: true           # 是否使用融合指标
  
  # 性能配置
  performance:
    max_events_per_second: 100
    batch_size: 10
    queue_size: 1000
  
  # 监控配置
  monitoring:
    prometheus:
      port: 8004
      path: "/metrics"
      scrape_interval: "5s"
    
    alerts:
      enabled: true
      rules:
        - name: "divergence_detection_failure"
          expr: "increase(divergence_events_total[5m]) == 0"
          for: "10m"
          severity: "warning"
          summary: "背离检测模块无事件产生"
  
  # 热更新配置
  hot_reload:
    enabled: true
    watch_file: true
    reload_delay: 1.0
    backup_config: true
    log_changes: true

# ============================================================================
# 策略模式管理器配置
# ============================================================================
strategy_mode:
  # 默认模式
  default_mode: "auto"  # auto | active | quiet
  
  # 迟滞配置
  hysteresis:
    window_secs: 60
    min_active_windows: 3
    min_quiet_windows: 6
  
  # 触发器配置
  triggers:
    # 时间表触发器
    schedule:
      enabled: true
      timezone: "Asia/Hong_Kong"
      calendar: "CRYPTO"
      enabled_weekdays: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]
      holidays: []
      active_windows:
        - start: "09:00"
          end: "16:00"
          timezone: "Asia/Hong_Kong"
        - start: "20:00"
          end: "02:00"
          timezone: "Asia/Hong_Kong"
      wrap_midnight: true
    
    # 市场触发器
    market:
      enabled: true
      window_secs: 60
      min_trades_per_min: 500
      min_quote_updates_per_sec: 100
      max_spread_bps: 5
      min_volatility_bps: 10
      min_volume_usd: 1000000
      use_median: true
      winsorize_percentile: 95
  
  # 特性开关
  features:
    dynamic_mode_enabled: true
    dry_run: false
  
  # 监控配置
  monitoring:
    prometheus:
      port: 8006
      path: "/metrics"
      scrape_interval: "5s"
    
    alerts:
      enabled: true
      rules:
        - name: "strategy_mode_switching_too_frequently"
          expr: "sum(increase(strategy_mode_transitions_total[1h])) > 10"
          for: "10m"
          severity: "warning"
          summary: "策略模式切换过于频繁"
        - name: "strategy_mode_stuck_in_quiet"
          expr: "(time() - max(strategy_mode_last_change_timestamp)) > 4*3600 and on() avg(strategy_mode_active) < 0.5"
          for: "15m"
          severity: "warning"
          summary: "策略模式长期处于quiet状态"
  
  # 热更新配置
  hot_reload:
    enabled: true
    watch_file: true
    reload_delay: 2.0
    backup_config: true
    log_changes: true

# ============================================================================
# 融合指标收集器配置
# ============================================================================
fusion_metrics_collector:
  # 基础配置
  enabled: true
  
  # 历史记录配置
  history:
    max_records: 1000
    cleanup_interval: 300  # 5分钟清理一次
  
  # 收集配置
  collection:
    update_interval: 1.0  # 1秒更新一次
    batch_size: 10
    enable_warmup: true
    warmup_samples: 50
  
  # 性能配置
  performance:
    max_collection_rate: 100  # 每秒最大收集次数
    memory_limit_mb: 50
    gc_threshold: 0.8  # 内存使用率超过80%时触发GC
  
  # 监控配置
  monitoring:
    prometheus:
      port: 8005
      path: "/metrics"
      scrape_interval: "5s"
    
    alerts:
      enabled: true
      rules:
        - name: "fusion_metrics_collection_failure"
          expr: "increase(fusion_metrics_collection_failures_total[5m]) > 0"
          for: "2m"
          severity: "warning"
          summary: "融合指标收集失败"
        - name: "fusion_metrics_memory_high"
          expr: "fusion_metrics_memory_usage_bytes / fusion_metrics_memory_limit_bytes > 0.8"
          for: "5m"
          severity: "warning"
          summary: "融合指标内存使用率过高"
  
  # 热更新配置
  hot_reload:
    enabled: true
    watch_file: true
    reload_delay: 1.0
    backup_config: true
    log_changes: true

# ============================================================================
# 交易流处理配置
# ============================================================================
trade_stream:
  # 基础配置
  enabled: true
  
  # 队列配置
  queue:
    size: 1024
    max_size: 2048
    backpressure_threshold: 0.8
  
  # 打印配置
  logging:
    print_every: 100  # 每100条打印一次
    stats_interval: 60.0  # 统计间隔（秒）
    log_level: "INFO"
  
  # WebSocket配置
  websocket:
    heartbeat_timeout: 30  # 心跳超时（秒）
    backoff_max: 15  # 最大退避时间（秒）
    ping_interval: 20  # Ping间隔（秒）
    close_timeout: 10  # 关闭超时（秒）
    reconnect_delay: 1.0  # 重连延迟（秒）
    max_reconnect_attempts: 10  # 最大重连尝试次数
  
  # 性能配置
  performance:
    watermark_ms: 1000  # 水印时间（毫秒）
    batch_size: 10  # 批处理大小
    max_processing_rate: 1000  # 最大处理速率（条/秒）
    memory_limit_mb: 100  # 内存限制（MB）
  
  # 监控配置
  monitoring:
    prometheus:
      port: 8008
      path: "/metrics"
      scrape_interval: "5s"
    
    alerts:
      enabled: true
      rules:
        - name: "trade_stream_connection_failure"
          expr: "increase(trade_stream_connection_failures_total[5m]) > 0"
          for: "2m"
          severity: "warning"
          summary: "交易流连接失败"
        - name: "trade_stream_queue_high"
          expr: "trade_stream_queue_size / trade_stream_queue_max_size > 0.8"
          for: "5m"
          severity: "warning"
          summary: "交易流队列使用率过高"
  
  # 热更新配置
  hot_reload:
    enabled: true
    watch_file: true
    reload_delay: 1.0
    backup_config: true
    log_changes: true
  
  # Grafana配置
  grafana:
    # 基础配置
    dashboard_uid: "divergence-monitoring"
    refresh_interval: "5s"
    
    # 详细配置
    server:
      host: "localhost"
      port: 3000
      protocol: "http"
      admin_user: "admin"
      admin_password: "admin"
      timeout: 30
    
    # 仪表盘配置
    dashboards:
      # 策略模式仪表盘
      strategy_mode:
        uid: "strategy-mode-overview"
        title: "Strategy Mode Overview"
        description: "V1核心面板：策略模式切换监控仪表盘"
        tags: ["strategy", "mode", "monitoring"]
        timezone: "Asia/Hong_Kong"
        refresh: "30s"
        time_range: "6h"
        
      # 性能仪表盘
      performance:
        uid: "strategy-performance"
        title: "Strategy Performance"
        description: "策略性能监控仪表盘"
        tags: ["strategy", "performance", "monitoring"]
        timezone: "Asia/Hong_Kong"
        refresh: "30s"
        time_range: "6h"
        
      # 告警仪表盘
      alerts:
        uid: "strategy-alerts"
        title: "Strategy Alerts"
        description: "策略告警监控仪表盘"
        tags: ["strategy", "alerts", "monitoring"]
        timezone: "Asia/Hong_Kong"
        refresh: "30s"
        time_range: "6h"
    
    # 数据源配置
    datasources:
      prometheus:
        name: "Prometheus"
        type: "prometheus"
        url: "http://localhost:9090"
        access: "proxy"
        is_default: true
        editable: true
        
      loki:
        name: "Loki"
        type: "loki"
        url: "http://localhost:3100"
        access: "proxy"
        editable: true
    
    # 变量配置
    variables:
      env:
        name: "env"
        type: "query"
        query: "label_values(strategy_mode_active, env)"
        refresh: 1
        include_all: false
        multi: false
        default_value: "testing"
        
      symbol:
        name: "symbol"
        type: "query"
        query: "label_values(strategy_mode_active{env=\"$env\"}, symbol)"
        refresh: 1
        include_all: true
        multi: true
        default_value: ["BTCUSDT"]
    
    # 告警配置
    alerting:
      enabled: true
      rules:
        # 频繁切换告警
        frequent_switching:
          alert: "StrategyModeSwitchingTooFrequently"
          expr: "sum(increase(strategy_mode_transitions_total{env=\"$env\"}[1h])) > 10"
          for: "10m"
          severity: "warning"
          summary: "策略模式切换过于频繁"
          description: "过去1小时内模式切换超过10次，可能存在配置问题"
        
        # 长期quiet模式
        stuck_quiet:
          alert: "StrategyModeStuckInQuiet"
          expr: "(time() - max(strategy_mode_last_change_timestamp{env=\"$env\"})) > 4*3600 and on() avg(strategy_mode_active{env=\"$env\"}) < 0.5"
          for: "15m"
          severity: "warning"
          summary: "策略模式长期处于quiet状态"
          description: "超过4小时未切换且当前为quiet模式"
        
        # 参数更新失败
        params_update_failed:
          alert: "StrategyParamsUpdateFailed"
          expr: "increase(strategy_params_update_failures_total{env=\"$env\"}[5m]) > 0"
          for: "0m"
          severity: "critical"
          summary: "策略参数更新失败"
          description: "过去5分钟内参数更新失败，请检查模块状态"
        
        # 指标心跳异常
        metrics_heartbeat_missing:
          alert: "StrategyMetricsHeartbeatMissing"
          expr: "absent(strategy_mode_active{env=\"$env\"}) or (time() - max(strategy_metrics_last_scrape_timestamp{env=\"$env\"})) > 120"
          for: "2m"
          severity: "critical"
          summary: "策略指标心跳异常"
          description: "指标缺失或超过2分钟未更新"
    
    # 通知渠道配置
    notifications:
      slack:
        enabled: false
        webhook_url: ""
        channel: "#alerts"
        
      email:
        enabled: false
        smtp_host: ""
        smtp_port: 587
        smtp_user: ""
        smtp_password: ""
        from_address: ""
        to_addresses: []

# ============================================================================
# 数据库配置（未来使用）
# ============================================================================
database:
  # 是否启用数据库
  enabled: false
  
  # 数据库类型: sqlite | postgresql | mysql
  type: "sqlite"
  
  # SQLite配置
  sqlite:
    database: "data/system.db"
  
  # PostgreSQL配置（示例）
  postgresql:
    host: "localhost"
    port: 5432
    database: "ofi_cvd_ai"
    # 用户名和密码应从环境变量读取
    # username: ${DB_USER}
    # password: ${DB_PASSWORD}

# ============================================================================
# 测试配置
# ============================================================================
testing:
  # 测试模式
  mode: "unit"  # unit | integration | e2e
  
  # 测试数据目录
  test_data_dir: "tests/data"
  
  # 测试结果目录
  test_results_dir: "tests/results"
  
  # 是否生成测试覆盖率报告
  coverage: true

# ============================================================================
# 策略模式与差异化配置（数字资产市场）
# ============================================================================
strategy:
  name: "ofi_cvd"
  
  # 模式选择: auto（自动切换）| active（固定活跃）| quiet（固定安静）
  mode: "auto"
  
  # 迟滞与去抖配置
  hysteresis:
    window_secs: 60           # 评估窗口长度（秒）
    min_active_windows: 3     # 连续满足活跃判定的窗口数，才切到 active
    min_quiet_windows: 6      # 连续不满足+非活跃时段的窗口数，才回到 quiet
  
  # 触发器配置
  triggers:
    # 时间表触发器
    schedule:
      enabled: true
      timezone: "Asia/Hong_Kong"      # 香港时区 (HKT, UTC+8)
      wrap_midnight: true              # 支持跨午夜窗口
      calendar: "CRYPTO"               # 交易日历: CRYPTO (24/7) | HK | CN | US
      enabled_weekdays: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]  # 数字资产7x24
      holidays: []                     # 数字资产无节假日
      active_windows:                  # 活跃时段（HKT）
        - "09:00-12:00"                # 亚洲早盘高峰
        - "14:00-17:00"                # 亚洲午后
        - "21:00-02:00"                # 欧美高峰（跨午夜，最重要）
        - "06:00-08:00"                # 美洲夜盘尾盘
    
    # 市场活跃度触发器（针对数字资产市场优化）
    market:
      enabled: true
      window_secs: 60                  # 滑动窗口长度
      min_trades_per_min: 500          # 最小成交笔数/分钟（数字资产高频）
      min_quote_updates_per_sec: 100   # 最小报价更新/秒（订单簿更新频繁）
      max_spread_bps: 5                # 最大点差（基点，流动性好时点差小）
      min_volatility_bps: 10           # 最小波动率（基点，数字资产波动性高）
      min_volume_usd: 1000000          # 最小成交量（美元，确保流动性充足）
      winsorize_percentile: 95         # 尖峰过滤（P95截断）
      use_median: true                 # 使用中位数替代平均值（稳健估计）
  
  # 分模式参数配置
  params:
    # OFI 参数
    ofi:
      active:
        bucket_ms: 50                  # 更短的bucket（数字资产高频）
        depth_levels: 15               # 更深的订单簿深度
        watermark_ms: 200              # 更短的水位线（低延迟）
        freeze_ms: 0
        min_qty: 0
      quiet:
        bucket_ms: 500                 # 更长的bucket（降低噪声）
        depth_levels: 5                # 浅订单簿（避免虚假信号）
        watermark_ms: 2000             # 更长的水位线（等待稳定）
        freeze_ms: 100
        min_qty: 0
    
    # CVD 参数
    cvd:
      active:
        window_ticks: 1000             # 更短的窗口（快速反应）
        ema_span: 30                   # 更短的EMA（捕捉短期趋势）
        denoise_sigma: 1.5             # 较小的去噪（保留信号）
        half_life_trades: 200
        winsor_limit: 8.0
        freeze_min: 50
      quiet:
        window_ticks: 10000            # 更长的窗口（平滑噪声）
        ema_span: 300                  # 更长的EMA（过滤假信号）
        denoise_sigma: 4.0             # 更大的去噪（强过滤）
        half_life_trades: 500
        winsor_limit: 6.0
        freeze_min: 100
    
    # 风控参数
    risk:
      active:
        position_limit: 1.5            # 较大的仓位（高流动性支持）
        order_rate_limit_per_min: 1000 # 更高的下单频率
      quiet:
        position_limit: 0.1            # 极小的仓位（避免冲击）
        order_rate_limit_per_min: 20   # 极低的下单频率
    
    # 性能参数
    performance:
      active:
        flush_metrics_interval_ms: 5000
        print_every: 1000
      quiet:
        flush_metrics_interval_ms: 15000
        print_every: 5000

# ============================================================================
# 特性开关（Feature Flags）
# ============================================================================
features:
  # 是否启用新配置系统（本配置文件）
  use_system_config: false  # 默认false，需要明确启用
  
  # 是否启用详细日志
  verbose_logging: false
  
  # 是否启用性能分析
  profiling: false
  
  # 是否启用实验性功能
  experimental: false
  
  # 策略特性
  strategy:
    dynamic_mode_enabled: true         # 启用动态模式切换
    throttle_in_quiet: true            # 安静期降采样/限速
    sample_ratio_quiet: 0.3            # 安静期采样比例
    dry_run: false                     # 干跑模式（仅打印，不切换参数）
    cli_override_priority: true        # CLI 参数优先级高于文件配置

# ============================================================================
# 通知配置（未来使用）
# ============================================================================
notifications:
  # 是否启用通知
  enabled: false
  
  # 通知方式: email | slack | telegram | webhook
  channels:
    - email
  
  # 邮件配置
  email:
    smtp_server: "smtp.gmail.com"
    smtp_port: 587
    # 凭据应从环境变量读取
    # username: ${EMAIL_USER}
    # password: ${EMAIL_PASSWORD}
    # to_addresses:
    #   - "admin@example.com"

# ============================================================================
# 安全配置
# ============================================================================
security:
  # API密钥加密
  encrypt_api_keys: true
  
  # 敏感数据脱敏
  mask_sensitive_data: true
  
  # 允许的IP地址（空表示允许所有）
  allowed_ips: []
  
  # 速率限制
  rate_limiting:
    enabled: false
    max_requests_per_minute: 100

# ============================================================================
# 备注
# ============================================================================
# 1. 环境变量覆盖：所有配置都可以通过环境变量覆盖
#    格式：SECTION_KEY（大写，用下划线连接）
#    例如：PERFORMANCE_QUEUE_MAX_SIZE=10000
#
# 2. 环境特定配置：通过 config/environments/{ENV}.yaml 覆盖
#    开发环境：ENV=development
#    测试环境：ENV=testing
#    生产环境：ENV=production
#
# 3. 配置优先级：环境变量 > 环境配置 > 系统配置 > 默认值
#
# 4. 敏感信息：API密钥、密码等应通过环境变量设置，不要写入配置文件
#
# 5. 路径：相对路径会自动转换为相对于项目根目录的绝对路径

